from news.models import *

1. Создать двух пользователей (с помощью метода User.objects.create_user('username')):

    u1 = User.objects.create_user('Artem')
    u2 = User.objects.create_user('Ivan')

2. Создать два объекта модели Author, связанные с пользователями:

    Author.objects.create(author_user=u1)
    Author.objects.create(author_user=u2)

3. Добавить 4 категории в модель Category:

    Category.objects.create(category_name='IT')
    Category.objects.create(category_name='City')
    Category.objects.create(category_name='Auto')
    Category.objects.create(category_name='Sport')

4. Добавить 2 статьи и 1 новость.

    author = Author.objects.get(id=1)
    Post.objects.create(author_connect=author, category_type='AR', title='sometitle1', text='sometext1')
    Post.objects.create(author_connect=author, category_type='AR', title='sometitle2', text='sometext2')
    Post.objects.create(author_connect=author, category_type='NW', title='sometitleNW', text='sometextNW')

5. Присвоить им категории (как минимум в одной статье/новости должно быть не меньше 2 категорий).

    Post.objects.get(id=1).post_category.add(Category.objects.get(id=1))
    Post.objects.get(id=1).post_category.add(Category.objects.get(id=2))
    Post.objects.get(id=2).post_category.add(Category.objects.get(id=3))
    Post.objects.get(id=3).post_category.add(Category.objects.get(id=4))

6. Создать как минимум 4 комментария к разным объектам модели Post (в каждом объекте должен быть как минимум один комментарий).

    Comment.objects.create(comment_post=Post.objects.get(id=1), comment_user=Author.objects.get(id=1).author_user, text='anytext')
    Comment.objects.create(comment_post=Post.objects.get(id=2), comment_user=Author.objects.get(id=2).author_user, text='anytext1')
    Comment.objects.create(comment_post=Post.objects.get(id=2), comment_user=Author.objects.get(id=2).author_user, text='anytext2')
    Comment.objects.create(comment_post=Post.objects.get(id=3), comment_user=Author.objects.get(id=1).author_user, text='anytext433')
    Comment.objects.create(comment_post=Post.objects.get(id=3), comment_user=Author.objects.get(id=1).author_user, text='anytext43354646445')

7. Применяя функции like() и dislike() к статьям/новостям и комментариям, скорректировать рейтинги этих объектов.

    Comment.objects.get(id=1).like()
    Comment.objects.get(id=2).like()
    Post.objects.get(id=1).dislike()
    Post.objects.get(id=2).dislike()
    Post.objects.get(id=3).like()
    Post.objects.get(id=3).like()

8. Обновить рейтинги пользователей.

    Author.objects.get(id=1).update_rating()
    Author.objects.get(id=2).update_rating()

9. Вывести username и рейтинг лучшего пользователя (применяя сортировку и возвращая поля первого объекта).

    a = Author.objects.order_by('-rating_author')[:1]
    for i in a:
        i.author_user.username
        i.rating_author

10. Вывести дату добавления, username автора, рейтинг, заголовок и превью лучшей статьи, основываясь на лайках/дислайках к этой статье.

    b = Post.objects.order_by('-rating')[:1]
    for i in b:
        i.date_create
        i.author_connect.author_user.username
        i.rating
        i.title
        i.preview()


11. Вывести все комментарии (дата, пользователь, рейтинг, текст) к этой статье.

    comments = Comment.objects.filter(comment_post_id=Post.objects.get(id=Post.objects.order_by('-rating')[:1]))
    for i in comments:
        i.comment_user
        i.date_create
        i.rating
        i.text